{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\nicho\\\\Documents\\\\VSCode\\\\ass2\\\\screens\\\\home.js\";\n\nimport React, { useState, Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Flatlist } from \"react-native-web/dist/index\";\nimport { State, TextInput } from \"react-native-gesture-handler\";\nimport { AQUARIUMS, Aquariums } from \"../dummydata/Dummy-Data\";\nimport AquariumItem from \"../components/AquariumItem\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport * as firebase from \"firebase\";\nimport { getAquarium } from \"../api/FirebaseApi\";\n\nvar Home = function Home(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModealVisible = _useState2[0],\n      setIsModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasLoaded = _useState4[0],\n      setHasLoaded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      aqData = _useState6[0],\n      setAqData = _useState6[1];\n\n  var toggleModal = function toggleModal() {\n    setIsModalVisible(!isModealVisible);\n  };\n\n  var renderAquariumItem = function renderAquariumItem(itemData) {\n    return React.createElement(AquariumItem, {\n      id: itemData.item.id,\n      name: itemData.item.name,\n      image: itemData.item.imageUrl,\n      volume: itemData.item.volume,\n      type: itemData.item.type,\n      onSelectAquarium: function onSelectAquarium() {\n        props.navigation.navigate({\n          routeName: \"AquariumDetails\",\n          params: {\n            aqId: itemData.item.id,\n            bgImage: itemData.item.imageUrl\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var displayedAquariums = AQUARIUMS.filter(function (aquarium) {\n    return aquarium.id >= 0;\n  });\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Name: \", aqData), React.createElement(FlatList, {\n    data: displayedAquariums,\n    renderItem: renderAquariumItem,\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: \"8%\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"New\",\n    onPress: function onPress() {\n      props.navigation.navigate({\n        routeName: \"AddNewAquarium\"\n      });\n    },\n    width: 200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    width: 300,\n    height: 300,\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    paddingHorizontal: 10\n  },\n  modalButtons: {\n    justifyContent: \"space-evenly\",\n    paddingHorizontal: 10\n  },\n  modalTitle: {\n    fontSize: 22\n  },\n  textInput: {\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  screen: {\n    height: \"100%\",\n    backgroundColor: \"#ccc\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/nicho/Documents/VSCode/ass2/screens/home.js"],"names":["React","useState","Component","Flatlist","State","TextInput","AQUARIUMS","Aquariums","AquariumItem","ImagePicker","firebase","getAquarium","Home","props","isModealVisible","setIsModalVisible","hasLoaded","setHasLoaded","aqData","setAqData","toggleModal","renderAquariumItem","itemData","item","id","name","imageUrl","volume","type","navigation","navigate","routeName","params","aqId","bgImage","displayedAquariums","filter","aquarium","styles","screen","width","height","alignItems","justifyContent","StyleSheet","create","centeredView","flex","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","buttonContainer","flexDirection","paddingHorizontal","modalButtons","modalTitle","fontSize","textInput","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Button,\r\n  Modal,\r\n  Flatlist,\r\n} from \"react-native\";\r\nimport { State, TextInput } from \"react-native-gesture-handler\";\r\nimport { AQUARIUMS, Aquariums } from \"../dummydata/Dummy-Data\";\r\nimport AquariumItem from \"../components/AquariumItem\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nimport * as firebase from \"firebase\";\r\nimport { getAquarium } from \"../api/FirebaseApi\";\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n  // State = initialState;\r\n  // var temp = [];\r\n  // temp = getAquarium();\r\n\r\n  const [isModealVisible, setIsModalVisible] = useState(false);\r\n\r\n  const [hasLoaded, setHasLoaded] = useState(false);\r\n  const [aqData, setAqData] = useState([]);\r\n\r\n  const toggleModal = () => {\r\n    setIsModalVisible(!isModealVisible);\r\n  };\r\n  \r\n  // useEffect(() => {\r\n  //   setAqData(getAquarium());\r\n  // }, []);  \r\n\r\n  //get some dummy-data\r\n  const renderAquariumItem = (itemData) => {\r\n\r\n    return (\r\n      <AquariumItem\r\n        id={itemData.item.id}\r\n        name={itemData.item.name}\r\n        image={itemData.item.imageUrl}\r\n        volume={itemData.item.volume}\r\n        type={itemData.item.type}\r\n        onSelectAquarium={() => {\r\n          props.navigation.navigate({\r\n            routeName: \"AquariumDetails\",\r\n            params: {\r\n              aqId: itemData.item.id,\r\n              bgImage: itemData.item.imageUrl,\r\n            },\r\n          });\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const displayedAquariums = AQUARIUMS.filter((aquarium) => aquarium.id >= 0);\r\n\r\n  // if (!hasLoaded) {\r\n  //   getData();\r\n  // }\r\n\r\n  return (\r\n    //renders data from aquarium object as list\r\n    <View style={styles.screen}>\r\n      <Text>Name: {aqData}</Text>\r\n      <FlatList\r\n        data={displayedAquariums}\r\n        renderItem={renderAquariumItem}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n      <FlatList />\r\n\r\n      {/* renders button to add new aquarium */}\r\n      <View\r\n        style={{\r\n          height: \"8%\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Button\r\n          title=\"New\"\r\n          onPress={() => {\r\n            props.navigation.navigate({\r\n              routeName: \"AddNewAquarium\",\r\n            });\r\n          }}\r\n          // onPress={pickImage}\r\n          width={200}\r\n        />\r\n      </View>\r\n\r\n      {/* <Modal visible={isModealVisible} animationType=\"slide\" transparent={true}>\r\n        <View style={styles.centeredView}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalTitle}> Add New Aquarium </Text>\r\n            <View style={{ flex: 2, justifyContent: \"center\" }}>\r\n              <TextInput\r\n                style={{\r\n                  width: 200,\r\n                  height: 40,\r\n                  borderBottomWidth: 2,\r\n                  borderBottomColor: \"black\",\r\n                }}\r\n                placeholder=\"Aquarium Name\"\r\n              />\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n              <View style={styles.modalButtons}>\r\n                <Button\r\n                  title=\"Cancel\"\r\n                  style={styles.button}\r\n                  onPress={() => {\r\n                    toggleModal();\r\n                  }}\r\n                />\r\n              </View>\r\n              <View style={styles.modalButtons}>\r\n                <Button\r\n                  title=\"Add\"\r\n                  style={styles.button}\r\n                  onPress={() => {\r\n                    toggleModal();\r\n                  }}\r\n                  width={200}\r\n                />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal> */}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  //modal styles\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    width: 300,\r\n    height: 300,\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  modalButtons: {\r\n    justifyContent: \"space-evenly\",\r\n    paddingHorizontal: 10,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 22,\r\n  },\r\n  textInput: {\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n  },\r\n\r\n  screen: {\r\n    height: \"100%\",\r\n    backgroundColor: \"#ccc\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}